{
  "_from": "regex-not@^1.0.0",
  "_id": "regex-not@1.0.2",
  "_inBundle": false,
  "_integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",
  "_location": "/regex-not",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "regex-not@^1.0.0",
    "name": "regex-not",
    "escapedName": "regex-not",
    "rawSpec": "^1.0.0",
    "saveSpec": null,
    "fetchSpec": "^1.0.0"
  },
  "_requiredBy": [
    "/@jest/core/expand-brackets",
    "/@jest/core/extglob",
    "/@jest/core/sane/micromatch",
    "/@jest/reporters/expand-brackets",
    "/@jest/reporters/extglob",
    "/@jest/reporters/sane/micromatch",
    "/@jest/test-sequencer/expand-brackets",
    "/@jest/test-sequencer/extglob",
    "/@jest/test-sequencer/sane/micromatch",
    "/@jest/transform/expand-brackets",
    "/@jest/transform/extglob",
    "/@jest/transform/sane/micromatch",
    "/anymatch/expand-brackets",
    "/anymatch/extglob",
    "/anymatch/micromatch",
    "/jest-runner/expand-brackets",
    "/jest-runner/extglob",
    "/jest-runner/sane/micromatch",
    "/jest-runtime/expand-brackets",
    "/jest-runtime/extglob",
    "/jest-runtime/sane/micromatch",
    "/jest-snapshot/expand-brackets",
    "/jest-snapshot/extglob",
    "/jest-snapshot/sane/micromatch",
    "/nanomatch",
    "/sane/expand-brackets",
    "/sane/extglob",
    "/sane/micromatch",
    "/to-regex"
  ],
  "_resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz",
  "_shasum": "1f4ece27e00b0b65e0247a6810e6a85d83a5752c",
  "_spec": "regex-not@^1.0.0",
  "_where": "/home/trisys/MediPiperProject/LoginFlow/node_modules/anymatch/node_modules/micromatch",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/regex-not/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "extend-shallow": "^3.0.2",
    "safe-regex": "^1.1.0"
  },
  "deprecated": false,
  "description": "Create a javascript regular expression for matching everything except for the given string.",
  "devDependencies": {
    "gulp-format-md": "^1.0.0",
    "mocha": "^3.5.3"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/jonschlinkert/regex-not",
  "keywords": [
    "exec",
    "match",
    "negate",
    "negation",
    "not",
    "regex",
    "regular expression",
    "test"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "regex-not",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/regex-not.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "toc": false,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "plugins": [
      "gulp-format-md"
    ],
    "related": {
      "list": [
        "regex-cache",
        "to-regex"
      ]
    },
    "reflinks": [
      "verb",
      "verb-generate-readme"
    ],
    "lint": {
      "reflinks": true
    }
  },
  "version": "1.0.2"
}
